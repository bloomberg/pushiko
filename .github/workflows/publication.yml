name: 'Publication'

on:
  push:
    branches:
      - main
  release:
    types: [published]

jobs:
  publish:
    name: 'Publish'
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 11
      - name: 'Gradle'
        run: |
          echo 'org.gradle.caching=false' >> gradle.properties
          echo 'org.gradle.configuration-cache=false' >> gradle.properties
      - name: 'Check'
        run: ./gradlew check -x integrationTest
      - name: 'Publish snapshot to OSSRH'
        if: github.event_name == 'push'
        env:
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.GPG_KEY }}
          ORG_GRADLE_PROJECT_signingKeyId: ${{ secrets.GPG_KEY_ID }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.GPG_KEY_PASSPHRASE }}
          ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.OSSRH_USER_TOKEN_PASSWORD }}
          ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.OSSRH_USER_TOKEN_USERNAME }}
        run: |
          ./gradlew \
            publishMainPublicationToSonatypeRepository \
            closeSonatypeStagingRepository
      - name: 'Publish release to OSSRH'
        if: github.event_name == 'release' && github.event.action == 'published'
        env:
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.GPG_KEY }}
          ORG_GRADLE_PROJECT_signingKeyId: ${{ secrets.GPG_KEY_ID }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.GPG_KEY_PASSPHRASE }}
          ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.OSSRH_USER_TOKEN_PASSWORD }}
          ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.OSSRH_USER_TOKEN_USERNAME }}
        run: |
          ./gradlew \
            -Prelease \
            publishMainPublicationToSonatypeRepository \
            closeAndReleaseSonatypeStagingRepository
      - name: 'Tear down'
        if: always()
        run: |
          ./gradlew --stop
